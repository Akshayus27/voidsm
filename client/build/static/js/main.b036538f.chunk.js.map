{"version":3,"sources":["images/engrave.jpg","util/MyButton.js","redux/actions/monkActions.js","redux/types.js","components/Notifications.js","redux/actions/dataActions.js","components/PostEngrave.js","components/Navbar.js","redux/reducers/monkReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","components/VoteButton.js","components/DeleteEnlighten.js","components/Enlightens.js","components/EnlightenForm.js","components/EngraveDialog.js","components/DeleteEngrave.js","components/Engrave.js","components/EditDetails.js","util/ProfileSkeleton.js","components/Profile.js","util/EngraveSkeleton.js","pages/Home.js","pages/Login.js","pages/SignUp.js","components/StaticProfile.js","pages/Monk.js","util/AuthRoute.js","App.js","util/theme.js","index.js","images/no-img.png","images/void.jpg"],"names":["module","exports","children","onClick","tip","btnClassName","tipClassName","Tooltip","title","className","placement","IconButton","logOutMonk","dispatch","localStorage","removeItem","axios","defaults","headers","common","type","getMonkData","get","then","res","payload","data","catch","err","setAuthHeader","token","AuthToken","setItem","Notifications","state","anchorEl","handleOpen","event","setState","target","props","getNotifications","handleClose","onMenuOpened","unreadNotificationsIds","notifications","filter","not","read","map","_id","markNotificationsRead","notificationsIcon","this","dayjs","extend","relativeTime","length","Badge","badgeContent","color","notificationsMarkup","verb","time","createdAt","fromNow","iconColor","icon","ArrowUpward","style","marginRight","MenuItem","key","Typography","component","Link","variant","to","recipient","engraveId","sender","aria-owns","undefined","aria-haspopup","Menu","open","Boolean","onClose","onEntered","Component","connect","monk","notificationIds","post","getEngrave","voteEngrave","unvoteEngrave","clearErrors","PostEngrave","body","errors","handleChange","name","value","handleEngravePicture","document","getElementById","click","handleEngraveImg","image","files","formData","FormData","set","postEngrave","handleSubmit","preventDefault","nextProps","UI","loading","classes","MyButton","Dialog","fullWidth","maxWidth","closeButton","DialogTitle","src","EngraveIcon","alt","DialogContent","onSubmit","id","hidden","onChange","TextField","label","multiline","rows","placeholder","error","helperText","textField","Button","submitButton","disabled","CircularProgress","size","progressSpinner","newEngrave","response","withStyles","theme","spreadIt","position","float","marginTop","left","top","Navbar","authenticated","AppBar","Toolbar","credentials","initialState","errKey","votes","engraves","engrave","enlightens","middleware","thunk","reducers","combineReducers","action","handle","vote","engarveId","forEach","index","findIndex","splice","store","createStore","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","VoteButton","votedEngrave","find","voteCount","mapActionsToProps","DeleteEnlighten","deleteEnlighten","deleteButton","DialogActions","delete","Enlightens","Grid","container","enlighten","item","sm","btoa","String","fromCharCode","apply","Uint8Array","enlightenImage","enlightenData","display","format","invisibleSeparator","visibleSeparator","height","objectFit","borderRadius","marginLeft","EnlightenForm","submitEnlighten","textAlign","button","EngraveDialog","oldPath","newPath","location","pathname","history","pushState","getEnlighten","openDialog","enlightenCount","monkImg","dialogMarkup","spinnerDiv","thickness","spacing","profileImage","expandButton","dialogContent","spredIt","width","padding","marginBottom","DeleteEngrave","deleteEngrave","Engrave","Card","card","CardMedia","dp","CardContent","content","EditDetails","bio","mapMonkDetailsToState","monkDetails","editMonkDetails","AssignmentInd","tpye","put","backgroundColor","palette","primary","main","margin","fullLine","halfLine","Paper","paper","profile","NoImg","Profile","handleImageChange","uploadImage","handleEditPicture","handleLogout","AddAPhoto","HomeWork","Schedule","align","buttons","cardContent","flexDirection","cover","minWidth","date","Array","from","Home","getEngraves","recentEngraves","xs","Login","monkData","email","password","loginMonk","form","MonkIcon","noValidate","progress","status","push","split","SignUp","newMonkData","signUpMonk","Monk","engraveIdParam","match","params","engravesMarkup","paddingLeft","rest","render","createMuiTheme","light","dark","contrastText","secondary","typography","useNextVariants","border","borderBottom","verticalAlign","cursor","jwtDecode","iat","Date","now","href","App","exact","path","ReactDOM"],"mappings":"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","file":"static/js/main.b036538f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/engrave.d773f5ad.jpg\";","import React from 'react'\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nexport default ({ children, onClick, tip, btnClassName, tipClassName }) => (\r\n  <Tooltip title={tip} className={tipClassName} placement=\"top\">\r\n    <IconButton onClick={onClick} className={btnClassName}>\r\n      {children}\r\n    </IconButton>\r\n  </Tooltip>\r\n)","import {\r\n    SET_MONK,\r\n    SET_ERRORS,\r\n    SET_ERROR_KEY,\r\n    CLEAR_ERRORS,\r\n    LOADING_UI,\r\n    SET_UNAUTHENTICATED,\r\n    LOADING_MONK,\r\n    MARK_NOTIFICATIONS_READ,\r\n    GET_NOTIFICATIONS\r\n} from '../types'\r\nimport axios from 'axios'\r\n\r\nexport const loginMonk = (monkData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI })\r\n    axios\r\n        .post('/login', monkData)\r\n        .then(res => {\r\n            if (res.status !== 400) {\r\n                setAuthHeader(res.data)\r\n                dispatch(getMonkData())\r\n                dispatch({ type: CLEAR_ERRORS})\r\n                history.push('/')\r\n            }\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n            dispatch({\r\n                type: SET_ERROR_KEY,\r\n                payload: err.response.data.split(' ')[0]\r\n            })\r\n        })\r\n}\r\n\r\nexport const signUpMonk = (newMonkData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI })\r\n    axios\r\n        .post('/sign-up', newMonkData)\r\n        .then(res => {\r\n            if (res.status !== 400) {\r\n                setAuthHeader(res.data)\r\n                dispatch(getMonkData())\r\n                dispatch({ type: CLEAR_ERRORS})\r\n                history.push('/')\r\n            }\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n            dispatch({\r\n                type: SET_ERROR_KEY,\r\n                payload: err.response.data.split(' ')[0]\r\n            })       \r\n        })\r\n}\r\n\r\nexport const logOutMonk = () => (dispatch) => {\r\n    localStorage.removeItem('AuthToken')\r\n    delete axios.defaults.headers.common['AuthToken']\r\n    dispatch({ type: SET_UNAUTHENTICATED })\r\n}\r\n\r\nexport const getMonkData = () => (dispatch) => {\r\n    dispatch({ type: LOADING_MONK })\r\n    axios\r\n        .get('/monk')\r\n        .then((res) => {\r\n            dispatch({\r\n                type: SET_MONK,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch((err) => {return})\r\n}\r\n\r\nexport const uploadImage = (formData) => (dispatch) => {\r\n    dispatch({ type: LOADING_MONK });\r\n    axios\r\n        .put('/monk/dp', formData)\r\n        .then(() => {\r\n            dispatch(getMonkData())\r\n        })\r\n        .catch((err) => {return})\r\n}\r\n\r\nexport const editMonkDetails = (monkDetails) => (dispatch) => {\r\n    dispatch({ type: LOADING_MONK })\r\n    axios\r\n        .put('/monk/update', monkDetails)\r\n        .then(() => {\r\n            dispatch(getMonkData())\r\n        })\r\n        .catch((err) => {return})\r\n}\r\n\r\nexport const markNotificationsRead = (notificationIds) => (dispatch) => {\r\n    axios\r\n        .post(`/notification/${notificationIds}`)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: MARK_NOTIFICATIONS_READ\r\n            })\r\n        })\r\n        .catch((err) => {return})\r\n}\r\n\r\nexport const getNotifications = () => (dispatch) => {\r\n    axios\r\n        .get(`/notification`)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: GET_NOTIFICATIONS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch((err) => {return})\r\n}\r\n\r\nconst setAuthHeader = (token) => {\r\n    const AuthToken = token\r\n    localStorage.setItem('AuthToken', AuthToken)\r\n    axios.defaults.headers.common['AuthToken'] = AuthToken\r\n}","// User reducer types\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED'\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED'\r\nexport const SET_MONK = 'SET_MONK'\r\nexport const LOADING_MONK = 'LOADING_MONK'\r\nexport const MARK_NOTIFICATIONS_READ = 'MARK_NOTIFICATIONS_READ'\r\nexport const GET_NOTIFICATIONS = 'GET_NOTIFICATIONS'\r\n// UI reducer types\r\nexport const SET_ERRORS = 'SET_ERRORS'\r\nexport const SET_ERROR_KEY = 'SET_ERROR_KEY'\r\nexport const LOADING_UI = 'LOADING_UI'\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'\r\nexport const LOADING_DATA = 'LOADING_DATA'\r\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI'\r\n// Data reducer types\r\nexport const SET_ENGRAVES= 'SET_ENGRAVES'\r\nexport const SET_ENGRAVE = 'SET_ENGRAVE'\r\nexport const VOTE_ENGRAVE = 'VOTE_ENGRAVE'\r\nexport const UNVOTE_ENGRAVE = 'UNVOTE_ENGRAVE'\r\nexport const DELETE_ENGRAVE = 'DELETE_ENGRAVE'\r\nexport const POST_ENGRAVE = 'POST_ENGRAVE'\r\nexport const SUBMIT_ENLIGHTEN = 'SUBMIT_ENLIGHTEN'\r\nexport const DELETE_ENLIGHTEN = 'DELETE_ENLIGHTEN'","import React, { Component, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport dayjs from 'dayjs'\r\nimport relativeTime from 'dayjs/plugin/relativeTime'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Badge from '@material-ui/core/Badge'\r\n\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\nimport { ArrowUpward } from '@material-ui/icons'\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { markNotificationsRead, getNotifications } from '../redux/actions/monkActions'\r\n\r\nclass Notifications extends Component {\r\n  state = {\r\n    anchorEl: null\r\n  }\r\n\r\n  handleOpen = (event) => {\r\n    this.setState({ anchorEl: event.target })\r\n    this.props.getNotifications()\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null })\r\n  }\r\n\r\n  onMenuOpened = () => {\r\n    let unreadNotificationsIds = this.props.notifications\r\n      .filter((not) => !not.read)\r\n      .map((not) => not._id)\r\n    this.props.markNotificationsRead(unreadNotificationsIds)\r\n  }\r\n\r\n  render() {\r\n    const notifications = this.props.notifications\r\n    const anchorEl = this.state.anchorEl\r\n\r\n    dayjs.extend(relativeTime)\r\n\r\n    let notificationsIcon\r\n    if (notifications && notifications.length > 0) {\r\n      notifications.filter((not) => not.read === false).length > 0\r\n        ? (notificationsIcon = (\r\n            <Badge\r\n              badgeContent={\r\n                notifications.filter((not) => not.read === false).length\r\n              }\r\n              color=\"secondary\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          ))\r\n        : (notificationsIcon = <NotificationsIcon />)\r\n    } else {\r\n      notificationsIcon = <NotificationsIcon />\r\n    }\r\n    let notificationsMarkup =\r\n      notifications && notifications.length > 0 ? (\r\n        notifications.map((not) => {\r\n          const verb = not.type === 'vote' ? 'voted' : 'enlightened on'\r\n          const time = dayjs(not.createdAt).fromNow()\r\n          const iconColor = not.read ? 'primary' : 'secondary'\r\n          const icon =\r\n            not.type === 'vote' ? (\r\n              <ArrowUpward color={iconColor} style={{ marginRight: 10 }} />\r\n            ) : (\r\n              <ChatIcon color={iconColor} style={{ marginRight: 10 }} />\r\n            )\r\n\r\n          return (\r\n            <MenuItem key={not.createdAt} onClick={this.handleClose}>\r\n              {icon}\r\n              <Typography\r\n                component={Link}\r\n                color=\"default\"\r\n                variant=\"body1\"\r\n                to={`/monks/${not.recipient}/engrave/${not.engraveId}`}\r\n              >\r\n                {not.sender} {verb} your engrave {time}\r\n              </Typography>\r\n            </MenuItem>\r\n          )\r\n        })\r\n      ) : (\r\n        <MenuItem onClick={this.handleClose}>\r\n          You have no notifications yet\r\n        </MenuItem>\r\n      )\r\n    return (\r\n      <Fragment>\r\n        <Tooltip placement=\"top\" title=\"Notifications\">\r\n          <IconButton\r\n            aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n            aria-haspopup=\"true\"\r\n            onClick={this.handleOpen}\r\n          >\r\n            {notificationsIcon}\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={this.handleClose}\r\n          onEntered={this.onMenuOpened}\r\n        >\r\n          {notificationsMarkup}\r\n        </Menu>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nNotifications.propTypes = {\r\n  markNotificationsRead: PropTypes.func,\r\n  getNotifications: PropTypes.func,\r\n  notifications: PropTypes.array\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.monk.notifications\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { markNotificationsRead, getNotifications }\r\n)(Notifications)","import {\r\n    SET_ENGRAVES,\r\n    LOADING_DATA,\r\n    VOTE_ENGRAVE,\r\n    UNVOTE_ENGRAVE,\r\n    DELETE_ENGRAVE,\r\n    SET_ERRORS,\r\n    POST_ENGRAVE,\r\n    CLEAR_ERRORS,\r\n    LOADING_UI,\r\n    SET_ENGRAVE,\r\n    STOP_LOADING_UI,\r\n    SUBMIT_ENLIGHTEN,\r\n    DELETE_ENLIGHTEN\r\n} from '../types'\r\nimport axios from 'axios'\r\n\r\nexport const getEngraves = () => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA })\r\n    axios\r\n        .get('/engrave')\r\n        .then((res) => {\r\n            dispatch({\r\n                type: SET_ENGRAVES,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: SET_ENGRAVES,\r\n                payload: []\r\n            })\r\n        })\r\n}\r\n\r\nexport const getEngrave = (engraveId) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI })\r\n    axios\r\n        .get(`/engrave/${engraveId}`)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: SET_ENGRAVE,\r\n                payload: res.data\r\n            });\r\n            dispatch({ type: STOP_LOADING_UI })\r\n        })\r\n        .catch((err) => {return})\r\n}\r\n\r\nexport const postEngrave = (newEngrave) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI })\r\n    axios\r\n        .post('/engrave/create', newEngrave)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: POST_ENGRAVE,\r\n                payload: res.data\r\n            });\r\n            dispatch(clearErrors())\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        })\r\n}\r\n\r\nexport const voteEngrave = (engraveId) => (dispatch) => {\r\n    axios\r\n        .get(`/engrave/${engraveId}/vote`)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: VOTE_ENGRAVE,\r\n                payload: res.data\r\n            })\r\n            dispatch(getEngrave(engraveId))\r\n        })\r\n        .catch((err) => {return})\r\n}\r\n\r\nexport const unvoteEngrave = (engraveId) => (dispatch) => {\r\n    axios\r\n        .get(`/engrave/${engraveId}/vote`)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: UNVOTE_ENGRAVE,\r\n                payload: res.data\r\n            })\r\n            dispatch(getEngrave(engraveId))\r\n        })\r\n        .catch((err) => {return})\r\n}\r\n\r\nexport const submitEnlighten = (engraveId, enlightenData) => (dispatch) => {\r\n    axios\r\n        .post(`/engrave/${engraveId}/enlighten`, enlightenData)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: SUBMIT_ENLIGHTEN,\r\n                payload: res.data\r\n            })\r\n            dispatch(clearErrors())\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err\r\n            })\r\n        })\r\n}\r\n\r\nexport const getEnlighten = (engraveId) => (dispatch) => {\r\n    axios\r\n        .get(`/engrave/${engraveId}/enlightens`)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: SUBMIT_ENLIGHTEN,\r\n                payload: res.data\r\n            })\r\n            dispatch(clearErrors())\r\n        })\r\n        .catch((err) => {return})\r\n}\r\n\r\nexport const deleteEngrave = (engraveId) => (dispatch) => {\r\n    axios\r\n        .delete(`/engrave/${engraveId}/delete`)\r\n        .then(() => {\r\n            dispatch({ type: DELETE_ENGRAVE, payload: engraveId })\r\n        })\r\n        .catch((err) => {return})\r\n}\r\n\r\nexport const deleteEnlighten= (engraveId) => (dispatch) => {\r\n    axios\r\n        .delete(`/engrave/${engraveId}/unenlighten`)\r\n        .then(() => {\r\n            dispatch({ type: DELETE_ENLIGHTEN, payload: engraveId })\r\n        })\r\n        .catch((err) => {return})\r\n}\r\n\r\nexport const getMonkData = (handle) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA })\r\n    axios\r\n        .get(`/monk/${handle}/engraves`)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: SET_ENGRAVES,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: SET_ENGRAVES,\r\n                payload: null\r\n            })\r\n        })\r\n}\r\n\r\nexport const clearErrors = () => (dispatch) => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n}","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport MyButton from '../util/MyButton'\r\nimport EngraveIcon from '../images/engrave.jpg'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { postEngrave, clearErrors } from '../redux/actions/dataActions'\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadIt,\r\n  submitButton: {\r\n    position: 'relative',\r\n    float: 'right',\r\n    marginTop: 10\r\n  },\r\n  progressSpinner: {\r\n    position: 'absolute'\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    left: '91%',\r\n    top: '6%'\r\n  }\r\n})\r\n\r\nclass PostEngrave extends Component {\r\n  state = {\r\n    open: false,\r\n    body: '',\r\n    errors: {}\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n\r\n    if (nextProps.UI.errors) {\r\n      this.setState({\r\n        errors: nextProps.UI.errors\r\n      })\r\n    }\r\n\r\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\r\n      this.setState({ body: '', open: false, errors: {} })\r\n    }\r\n  }\r\n\r\n  handleOpen = () => {\r\n    this.setState({ open: true })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.props.clearErrors();\r\n    this.setState({ open: false, errors: {} })\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value })\r\n  }\r\n\r\n  handleEngravePicture = () => {\r\n    const fileInput = document.getElementById('imageEngrave')\r\n    fileInput.click()\r\n  }\r\n\r\n  handleEngraveImg = (event) => {\r\n    const image = event.target.files[0]\r\n    let formData = new FormData()\r\n    formData.set('image', image, image.name)\r\n    this.props.postEngrave(formData)\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    this.props.postEngrave({ body: this.state.body })\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state\r\n    const {\r\n      classes,\r\n      UI: { loading }\r\n    } = this.props\r\n\r\n    return (\r\n      <Fragment>\r\n        <MyButton onClick={this.handleOpen} tip=\"Engrave\">\r\n          <AddIcon />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <MyButton\r\n            tip=\"Close\"\r\n            onClick={this.handleClose}\r\n            tipClassName={classes.closeButton}\r\n          >\r\n            <CloseIcon />\r\n          </MyButton>\r\n          <DialogTitle>\r\n            <img src={EngraveIcon} alt='monk' className={classes.icon} />\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <input\r\n                type=\"file\"\r\n                id=\"imageEngrave\"\r\n                hidden=\"hidden\"\r\n                onChange={this.handleEngraveImg}\r\n              />\r\n              <MyButton\r\n                tip=\"Upload picture\"\r\n                onClick={this.handleEngravePicture}\r\n                btnClassName=\"button\"\r\n              >\r\n                <PhotoCameraIcon color=\"primary\" />\r\n              </MyButton>\r\n              <TextField\r\n                name=\"body\"\r\n                type=\"text\"\r\n                label=\"Engrave your thoughts\"\r\n                multiline\r\n                rows=\"3\"\r\n                placeholder=\"Engrave...\"\r\n                error={errors.body ? true : false}\r\n                helperText={errors.body}\r\n                className={classes.textField}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submitButton}\r\n                disabled={loading}\r\n              >\r\n                Submit\r\n                {loading && (\r\n                  <CircularProgress\r\n                    size={30}\r\n                    className={classes.progressSpinner}\r\n                  />\r\n                )}\r\n              </Button>\r\n            </form>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nPostEngrave.propTypes = {\r\n  postEngrave: PropTypes.func.isRequired,\r\n  clearErrors: PropTypes.func.isRequired,\r\n  UI: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UI: state.UI\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { postEngrave, clearErrors }\r\n)(withStyles(styles)(PostEngrave))","import React, { Component, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport MyButton from '../util/MyButton';\r\nimport Notifications from './Notifications'\r\nimport PostEngrave from './PostEngrave'\r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport HomeIcon from '@material-ui/icons/Home'\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        const { authenticated } = this.props\r\n        return (\r\n            <AppBar>\r\n                <Toolbar className='nav-container'>\r\n                {authenticated ? (\r\n                    <Fragment>\r\n                        <PostEngrave />\r\n                            <Link to=\"/\">\r\n                                <MyButton tip=\"Home\">\r\n                                 <HomeIcon />\r\n                                </MyButton>\r\n                            </Link>\r\n                                <Notifications />\r\n                    </Fragment>\r\n                    ) : (\r\n                    <Fragment>\r\n                        <Button color=\"inherit\" component={Link} to=\"/login\">\r\n                            Login\r\n                        </Button>\r\n                        <Button color=\"inherit\" component={Link} to=\"/\">\r\n                            Home\r\n                        </Button>\r\n                        <Button color=\"inherit\" component={Link} to=\"/signup\">\r\n                            SignUp\r\n                        </Button>\r\n                    </Fragment>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        )\r\n    }\r\n}\r\n\r\nNavbar.propTypes = {\r\n    authenticated: PropTypes.bool.isRequired,\r\n    credentials: PropTypes.object.isRequired\r\n  }\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    authenticated: state.monk.authenticated,\r\n    credentials: state.monk.credentials\r\n  })\r\n  \r\n  export default connect(mapStateToProps)(Navbar)\r\n","import {\r\n    SET_MONK,\r\n    SET_AUTHENTICATED,\r\n    SET_UNAUTHENTICATED,\r\n    LOADING_MONK,\r\n    VOTE_ENGRAVE,\r\n    UNVOTE_ENGRAVE,\r\n    MARK_NOTIFICATIONS_READ,\r\n    GET_NOTIFICATIONS, \r\n    SET_ERRORS, \r\n    SET_ERROR_KEY\r\n  } from '../types'\r\n  \r\n  const initialState = {\r\n    authenticated: false,\r\n    loading: false,\r\n    credentials: {},\r\n    errors: {},\r\n    errKey: '',\r\n    notifications: [],\r\n    votes: []\r\n  }\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SET_AUTHENTICATED:\r\n        return {\r\n          ...state,\r\n          authenticated: true\r\n        }\r\n      case SET_UNAUTHENTICATED:\r\n        return initialState;\r\n      case SET_MONK:\r\n        return {\r\n          ...state,\r\n          authenticated: true,\r\n          loading: false,\r\n          credentials: {...action.payload}\r\n        }\r\n      case LOADING_MONK:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      case SET_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: action.payload\r\n        }\r\n      case SET_ERROR_KEY:\r\n        return {\r\n          ...state,\r\n          errKey: action.payload\r\n        }\r\n      case VOTE_ENGRAVE:\r\n        return {\r\n          ...state,\r\n          votes: [\r\n            ...state.votes,\r\n            {\r\n              handle: state.credentials.handle,\r\n              engraveId: action.payload.engraveId\r\n            }\r\n          ]\r\n        }\r\n      case UNVOTE_ENGRAVE:\r\n        return {\r\n          ...state,\r\n          votes: state.votes.filter(\r\n            (vote) => (action.payload.handle !== vote.handle) && (action.payload.engarveId !== vote.engraveId)\r\n          )\r\n        }\r\n      case MARK_NOTIFICATIONS_READ:\r\n        state.notifications.forEach((not) => (not.read = true));\r\n        return {\r\n          ...state\r\n        }\r\n      case GET_NOTIFICATIONS:\r\n        return {\r\n          ...state,\r\n          notifications: [...action.payload]\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }","\r\nimport {\r\n    SET_ENGRAVES,\r\n    VOTE_ENGRAVE,\r\n    UNVOTE_ENGRAVE,\r\n    LOADING_DATA,\r\n    DELETE_ENGRAVE,\r\n    POST_ENGRAVE,\r\n    SET_ENGRAVE,\r\n    SUBMIT_ENLIGHTEN,\r\n    DELETE_ENLIGHTEN\r\n} from '../types'\r\n\r\nconst initialState = {\r\n    engraves: [],\r\n    engrave: {},\r\n    enlightens: [],\r\n    loading: false\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case SET_ENGRAVES:\r\n            return {\r\n                ...state,\r\n                engraves: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_ENGRAVE:\r\n            return {\r\n                ...state,\r\n                engrave: action.payload\r\n            }\r\n        case VOTE_ENGRAVE:\r\n        case UNVOTE_ENGRAVE:\r\n            let index = state.engraves.findIndex((engrave) => engrave._id === action.payload._id)\r\n            state.engraves[index] = action.payload\r\n            return {\r\n                ...state,\r\n            }\r\n        case DELETE_ENGRAVE:\r\n            index = (state.engraves._id === action.payload)\r\n            state.engraves.splice(index, 1)\r\n            return {\r\n                ...state\r\n            }\r\n        case POST_ENGRAVE:\r\n            return {\r\n                ...state,\r\n                engraves: [action.payload, ...state.engraves]\r\n            }\r\n        case SUBMIT_ENLIGHTEN:\r\n            return {\r\n                ...state,\r\n                enlightens: [...action.payload]\r\n            }\r\n        case DELETE_ENLIGHTEN:\r\n            return {\r\n                ...state,\r\n                enlightens: [...action.payload]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    SET_ERRORS,\r\n    CLEAR_ERRORS,\r\n    LOADING_UI,\r\n    STOP_LOADING_UI, \r\n    SET_ERROR_KEY\r\n  } from '../types'\r\n  \r\n  const initialState = {\r\n    loading: false,\r\n    errors: '',\r\n    errKey: ''\r\n  }\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SET_ERRORS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          errors: action.payload\r\n        }\r\n      case SET_ERROR_KEY:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          errKey: action.payload\r\n        }\r\n      case CLEAR_ERRORS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          errors: '',\r\n          errKey: ''\r\n        }\r\n      case LOADING_UI:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      case STOP_LOADING_UI:\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }","import { createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport monkReducer from './reducers/monkReducer'\r\nimport dataReducer from './reducers/dataReducer'\r\nimport uiReducer from './reducers/uiReducer'\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst reducers = combineReducers({\r\n    monk: monkReducer,\r\n    data: dataReducer,\r\n    UI: uiReducer\r\n  })\r\n\r\nconst store = createStore(\r\n    reducers, \r\n    initialState, \r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n  \r\nexport default store\r\n\r\n","import React, { Component, Fragment } from 'react'\r\nimport MyButton from '../util/MyButton'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { voteEngrave, unvoteEngrave } from '../redux/actions/dataActions'\r\nimport { ArrowUpward } from '@material-ui/icons'\r\n\r\nclass VoteButton extends Component {\r\n\r\n  votedEngrave = () => {\r\n    if (\r\n      this.props.monk.votes &&\r\n      this.props.monk.votes.find(\r\n        (vote) => ((vote.engraveId === this.props.engrave._id)) && (this.props.engrave.handle === vote.handle))\r\n    ) return true\r\n    else return false\r\n  }\r\n\r\n  voteEngrave = () => {\r\n    this.props.voteEngrave(this.props.engraveId)\r\n  }\r\n\r\n  unvoteEngrave = () => {\r\n    this.props.unvoteEngrave(this.props.engraveId)\r\n  }\r\n\r\n  render() {\r\n    const { monk: { authenticated } } = this.props\r\n    const voteButton = !authenticated ? (\r\n      <Link to=\"/login\">\r\n        <MyButton tip=\"Vote\" onClick={this.voteEngrave}>\r\n             <ArrowUpward color=\"primary\" />\r\n            </MyButton>\r\n            <span>{this.props.voteCount} votes</span>\r\n      </Link>\r\n    ) : (\r\n      this.votedEngrave() ? (\r\n        <Fragment>\r\n          <MyButton tip=\"Vote\" onClick={this.voteEngrave}>\r\n             <ArrowUpward color=\"primary\" />\r\n            </MyButton>\r\n            <span>{this.props.voteCount} votes</span>\r\n        </Fragment>\r\n           ) :(\r\n        <Fragment>\r\n          <MyButton tip=\"Undo vote\" onClick={this.unvoteEngrave}>\r\n             <ArrowUpward color=\"primary\" />\r\n          </MyButton>\r\n           <span>{this.props.voteCount} votes</span>\r\n        </Fragment>\r\n           )\r\n      )\r\n    return voteButton\r\n  }\r\n}\r\n\r\nVoteButton.propTypes = {\r\n  monk: PropTypes.object.isRequired,\r\n  engraveId: PropTypes.string,\r\n  voteEngrave: PropTypes.func.isRequired,\r\n  unvoteEngrave: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  monk: state.monk\r\n})\r\n\r\nconst mapActionsToProps = {\r\n  voteEngrave,\r\n  unvoteEngrave\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(VoteButton)","import React, { Component, Fragment } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport PropTypes from 'prop-types'\r\nimport MyButton from '../util/MyButton'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { deleteEnlighten } from '../redux/actions/dataActions'\r\n\r\nconst styles = {\r\n  deleteButton: {\r\n    position: 'absolute',\r\n    left: '90%',\r\n    top: '10%'\r\n  }\r\n}\r\n\r\nclass DeleteEnlighten extends Component {\r\n  state = {\r\n    open: false\r\n  }\r\n\r\n  handleOpen = () => {\r\n    this.setState({ open: true })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false })\r\n  }\r\n\r\n  DeleteEnlighten = () => {\r\n    this.props.deleteEnlighten(this.props.engraveId)\r\n    this.setState({ open: false })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n\r\n    return (\r\n      <Fragment>\r\n        <MyButton\r\n          tip=\"Delete Enlighten\"\r\n          onClick={this.handleOpen}\r\n          btnClassName={classes.deleteButton}\r\n        >\r\n          <DeleteOutline color=\"secondary\" />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <DialogTitle>\r\n            Are you sure you want to delete this engrave ?\r\n          </DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.DeleteEnlighten} color=\"secondary\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nDeleteEnlighten.propTypes = {\r\n  deleteEnlighten: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  engraveId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteEnlighten }\r\n)(withStyles(styles)(DeleteEnlighten));","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport { Link } from 'react-router-dom'\r\nimport dayjs from 'dayjs'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport DeleteEnlighten from './DeleteEnlighten'\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadIt,\r\n  enlightenImage: {\r\n    maxWidth: '100%',\r\n    height: 100,\r\n    objectFit: 'cover',\r\n    borderRadius: '50%'\r\n  },\r\n  enlightenData: {\r\n    marginLeft: 20\r\n  }\r\n})\r\n\r\nclass Enlightens extends Component {\r\n\r\n  render() {\r\n    const { enlightens, engraveId, classes, monk: { authenticated, credentials } } = this.props\r\n\r\n    return (\r\n      <Grid container>\r\n        {enlightens ? enlightens.map((enlighten, index) => {\r\n          const { body, createdAt, image, handle } = enlighten\r\n          return (\r\n            <Fragment key={createdAt}>\r\n              <Grid item sm={10}>\r\n                <Grid container>\r\n                  <Grid item sm={2}>\r\n                    <img\r\n                      src={image ? \"data:image;base64,\" + btoa(String.fromCharCode.apply(null, new Uint8Array(image.data))) : null}\r\n                      alt=\"enlighten\"\r\n                      className={classes.enlightenImage}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item sm={9}>\r\n                    <div className={classes.enlightenData}>\r\n                      <div style={{ display: 'flex',position: 'relative' }}>\r\n                        {authenticated && handle === credentials.handle ? (\r\n                          <DeleteEnlighten engraveId={engraveId} />\r\n                        ) : null\r\n                        }\r\n                      </div>\r\n                      <Typography\r\n                        variant=\"h5\"\r\n                        component={Link}\r\n                        to={`/monks/${handle}`}\r\n                        color=\"primary\"\r\n                      >\r\n                        {handle}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                      </Typography>\r\n                      <hr className={classes.invisibleSeparator} />\r\n                      <Typography variant=\"body1\">{body}</Typography>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              {index !== enlightens.length - 1 && (\r\n                <hr className={classes.visibleSeparator} />\r\n              )}\r\n            </Fragment>\r\n          )\r\n        }) : null}\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nEnlightens.propTypes = {\r\n  enlightens: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(Enlightens)","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { submitEnlighten } from '../redux/actions/dataActions'\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadIt\r\n})\r\n\r\nclass EnlightenForm extends Component {\r\n  state = {\r\n    body: '',\r\n    errors: {}\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.UI.errors) {\r\n      this.setState({ errors: nextProps.UI.errors })\r\n    }\r\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\r\n      this.setState({ body: '' })\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    this.props.submitEnlighten(this.props.engraveId, { body: this.state.body })\r\n    this.setState({ body: '' })\r\n  }\r\n\r\n  render() {\r\n    const { classes, authenticated } = this.props\r\n    const errors = this.state.errors\r\n\r\n    const enlightenFormMarkup = authenticated ? (\r\n      <Grid item sm={12} style={{ textAlign: 'center' }}>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <TextField\r\n            name=\"body\"\r\n            type=\"text\"\r\n            label=\"Enlighten on engrave\"\r\n            error={errors.enlighten ? true : false}\r\n            helperText={errors.enlighten}\r\n            value={this.state.body}\r\n            onChange={this.handleChange}\r\n            fullWidth\r\n            className={classes.textField}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n        <hr className={classes.visibleSeparator} />\r\n      </Grid>\r\n    ) : null\r\n    return enlightenFormMarkup\r\n  }\r\n}\r\n\r\nEnlightenForm.propTypes = {\r\n  submitEnlighten: PropTypes.func.isRequired,\r\n  UI: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  engraveId: PropTypes.string,\r\n  authenticated: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UI: state.UI,\r\n  authenticated: state.monk.authenticated\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { submitEnlighten }\r\n)(withStyles(styles)(EnlightenForm))","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport MyButton from '../util/MyButton'\r\nimport VoteButton from './VoteButton'\r\nimport Enlightens from './Enlightens'\r\nimport EnlightenForm from './EnlightenForm'\r\nimport dayjs from 'dayjs'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport UnfoldMore from '@material-ui/icons/UnfoldMore'\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { getEngrave, clearErrors, getEnlighten } from '../redux/actions/dataActions'\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spredIt,\r\n  profileImage: {\r\n    maxWidth: 200,\r\n    height: 200,\r\n    borderRadius: '50%',\r\n    objectFit: 'cover'\r\n  },\r\n  post: {\r\n    width: 500,\r\n    height: 500\r\n  },\r\n  dialogContent: {\r\n    padding: 20\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    left: '90%'\r\n  },\r\n  expandButton: {\r\n    position: 'absolute',\r\n    left: '90%'\r\n  },\r\n  spinnerDiv: {\r\n    textAlign: 'center',\r\n    marginTop: 50,\r\n    marginBottom: 50\r\n  }\r\n})\r\n\r\nclass EngraveDialog extends Component {\r\n  state = {\r\n    open: false,\r\n    oldPath: '',\r\n    newPath: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.openDialog) {\r\n      this.handleOpen()\r\n    }\r\n  }\r\n\r\n  handleOpen = () => {\r\n    let oldPath = window.location.pathname\r\n\r\n    const { handle, engraveId } = this.props\r\n    const newPath = `/monks/${handle}/engrave/${engraveId}`\r\n\r\n    if (oldPath === newPath) oldPath = `/monk/${handle}`\r\n\r\n    window.history.pushState(null, null, newPath)\r\n\r\n    this.setState({ open: true, oldPath, newPath })\r\n    this.props.getEngrave(this.props.engraveId)\r\n    this.props.getEnlighten(this.props.engraveId)\r\n  }\r\n\r\n  handleClose = () => {\r\n    window.history.pushState(null, null, this.state.oldPath)\r\n    this.setState({ open: false })\r\n    this.props.clearErrors()\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      enlightens,\r\n      engrave: {\r\n        _id,\r\n        body,\r\n        createdAt,\r\n        voteCount,\r\n        enlightenCount,\r\n        monkImg,\r\n        image,\r\n        handle\r\n      },\r\n      UI: { loading }\r\n    } = this.props\r\n\r\n    const dialogMarkup = loading ? (\r\n      <div className={classes.spinnerDiv}>\r\n        <CircularProgress size={200} thickness={2} />\r\n      </div>\r\n    ) : (\r\n      <Grid container spacing={12}>\r\n        <Grid item sm={5}>\r\n          <img src={monkImg ? \"data:image;base64,\" + btoa(String.fromCharCode.apply(null, new Uint8Array(monkImg.data))):null} alt=\"Profile\" className={classes.profileImage} />\r\n        </Grid>\r\n        <Grid item sm={7}>\r\n          <Typography\r\n            component={Link}\r\n            color=\"primary\"\r\n            variant=\"h5\"\r\n            to={`/monks/${handle}`}\r\n          >\r\n            @{handle}\r\n          </Typography>\r\n          <hr className={classes.invisibleSeparator} />\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n          </Typography>\r\n          <hr className={classes.invisibleSeparator} />\r\n          {image ? <img src={\"data:image;base64,\" + btoa(String.fromCharCode.apply(null, new Uint8Array(image.data)))} alt=\"Profile\" className={classes.post} /> : <Typography variant=\"body1\">{body}</Typography>}\r\n          <VoteButton engraveId={_id} voteCount={voteCount}/>\r\n          <MyButton tip=\"enlightens\">\r\n            <ChatIcon color=\"primary\" />\r\n          </MyButton>\r\n          <span>{enlightenCount} enlightens</span>\r\n        </Grid>\r\n        <hr className={classes.visibleSeparator} />\r\n        <EnlightenForm engraveId={_id} />\r\n        <Enlightens engraveId={_id} enlightens={enlightens} monk={this.props.monk} />\r\n      </Grid>\r\n    )\r\n    return (\r\n      <Fragment>\r\n        <MyButton\r\n          onClick={this.handleOpen}\r\n          tip=\"Expand engrave\"\r\n          tipClassName={classes.expandButton}\r\n        >\r\n          <UnfoldMore color=\"primary\" />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <MyButton\r\n            tip=\"Close\"\r\n            onClick={this.handleClose}\r\n            tipClassName={classes.closeButton}\r\n          >\r\n            <CloseIcon />\r\n          </MyButton>\r\n          <DialogContent className={classes.dialogContent}>\r\n            {dialogMarkup}\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nEngraveDialog.propTypes = {\r\n  clearErrors: PropTypes.func.isRequired,\r\n  getEngrave: PropTypes.func.isRequired,\r\n  getEnlighten: PropTypes.func.isRequired,\r\n  engraveId: PropTypes.string.isRequired,\r\n  handle: PropTypes.string.isRequired,\r\n  engrave: PropTypes.object.isRequired,\r\n  UI: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  engrave: state.data.engrave,\r\n  enlightens: state.data.enlightens,\r\n  UI: state.UI\r\n})\r\n\r\nconst mapActionsToProps = {\r\n  getEngrave,\r\n  getEnlighten,\r\n  clearErrors\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(EngraveDialog))","import React, { Component, Fragment } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport PropTypes from 'prop-types'\r\nimport MyButton from '../util/MyButton'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { deleteEngrave } from '../redux/actions/dataActions'\r\n\r\nconst styles = {\r\n  deleteButton: {\r\n    position: 'absolute',\r\n    left: '90%',\r\n    top: '10%'\r\n  }\r\n}\r\n\r\nclass DeleteEngrave extends Component {\r\n  state = {\r\n    open: false\r\n  }\r\n\r\n  handleOpen = () => {\r\n    this.setState({ open: true })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false })\r\n  }\r\n\r\n  deleteEngrave = () => {\r\n    this.props.deleteEngrave(this.props.engraveId)\r\n    this.setState({ open: false })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n\r\n    return (\r\n      <Fragment>\r\n        <MyButton\r\n          tip=\"Delete Engrave\"\r\n          onClick={this.handleOpen}\r\n          btnClassName={classes.deleteButton}\r\n        >\r\n          <DeleteOutline color=\"secondary\" />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <DialogTitle>\r\n            Are you sure you want to delete this engrave ?\r\n          </DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.deleteEngrave} color=\"secondary\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nDeleteEngrave.propTypes = {\r\n  deleteEngrave: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  engraveId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteEngrave }\r\n)(withStyles(styles)(DeleteEngrave));","import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport { Link } from 'react-router-dom'\r\nimport dayjs from 'dayjs'\r\nimport relativeTime from 'dayjs/plugin/relativeTime'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\nimport EngraveDialog from './EngraveDialog'\r\nimport MyButton from '../util/MyButton'\r\nimport VoteButton from './VoteButton'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { voteEngrave, unvoteEngrave } from '../redux/actions/dataActions'\r\nimport DeleteEngrave from './DeleteEngrave'\r\n\r\nconst styles = {\r\n    card: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        marginBottom: 20\r\n    },\r\n    dp: {\r\n        width: 150,\r\n        height: 150\r\n    },\r\n    post: {\r\n        width: 500,\r\n        height: 500\r\n    },\r\n    content: {\r\n        padding: 25,\r\n        objectFit: 'cover'\r\n    }\r\n}\r\n\r\nclass Engrave extends Component {\r\n\r\n    render() {\r\n        dayjs.extend(relativeTime)\r\n        const { classes, engrave: { monkImg, body, createdAt, handle, _id, voteCount, enlightenCount, image}, monk: {authenticated, credentials} } = this.props\r\n        const deleteButton =\r\n                authenticated && handle === credentials.handle ? (\r\n                <DeleteEngrave engraveId={_id} />\r\n                ) : null\r\n        return (\r\n            <Card className={classes.card}>\r\n                <CardMedia \r\n                 image={monkImg ? \"data:image;base64,\" + btoa(String.fromCharCode.apply(null, new Uint8Array(monkImg.data))):null}           \r\n                 title=\"Profile pic\"\r\n                 className={classes.dp}\r\n                 />\r\n                 <CardContent className={classes.content}>\r\n                     <Typography \r\n                        variant='h5' \r\n                        component={Link} \r\n                        to={`/monks/${handle}`}\r\n                        color='secondary'\r\n                     >\r\n                         {handle}\r\n                     </Typography>\r\n                     {deleteButton}\r\n                     <Typography variant='body2' color='textSecondary'>\r\n                         {dayjs(createdAt).fromNow()}\r\n                     </Typography>\r\n                     <Typography variant='body1'>\r\n                         {body}\r\n                     </Typography>\r\n                     {image ? (<CardMedia \r\n                        image={\"data:image;base64,\" + btoa(String.fromCharCode.apply(null, new Uint8Array(image.data)))}           \r\n                        title=\"Engrave pic\"\r\n                        className={classes.post}\r\n                    />):(null)}\r\n                     <VoteButton key={voteCount} voteCount={voteCount} engraveId={_id} engrave={this.props.engrave} />\r\n                     <MyButton tip=\"enlightens\">\r\n                        <ChatIcon color=\"primary\" />\r\n                     </MyButton>\r\n                     <span>{enlightenCount} enlightens</span>\r\n                     <EngraveDialog\r\n                        engraveId={_id}\r\n                        handle={handle}\r\n                        monk={this.props.monk}\r\n                        openDialog={this.props.openDialog}\r\n                    />\r\n                 </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nEngrave.propTypes = {\r\n    monk: PropTypes.object.isRequired,\r\n    voteEngrave: PropTypes.func.isRequired,\r\n    unvoteEngrave: PropTypes.func.isRequired,\r\n    engrave: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n  }\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    monk: state.monk\r\n  })\r\n\r\n  const mapActionsToProps = (state) => ({\r\n      voteEngrave,\r\n      unvoteEngrave\r\n  })\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Engrave))","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport MyButton from '../util/MyButton'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { editMonkDetails } from '../redux/actions/monkActions'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\nimport { AssignmentInd } from '@material-ui/icons'\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadIt,\r\n  button: {\r\n    float: 'right'\r\n  }\r\n});\r\n\r\nclass EditDetails extends Component {\r\n  state = {\r\n    bio: '',\r\n    location: '',\r\n    open: false\r\n  }\r\n\r\n  mapMonkDetailsToState = (credentials) => {\r\n    this.setState({\r\n      bio: credentials.bio ? credentials.bio : '',\r\n      location: credentials.location ? credentials.location : ''\r\n    })\r\n  }\r\n\r\n  handleOpen = () => {\r\n    this.setState({ open: true })\r\n    this.mapMonkDetailsToState(this.props.credentials)\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { credentials } = this.props\r\n    this.mapMonkDetailsToState(credentials)\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    const monkDetails = {\r\n      bio: this.state.bio,\r\n      location: this.state.location\r\n    }\r\n    this.props.editMonkDetails(monkDetails);\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    return (\r\n      <Fragment>\r\n        <MyButton\r\n          tip=\"Edit Profile\"\r\n          onClick={this.handleOpen}\r\n          btnClassName={classes.button}\r\n        >\r\n          <AssignmentInd color=\"primary\" />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <DialogTitle>Edit Profile</DialogTitle>\r\n          <DialogContent>\r\n            <form>\r\n              <TextField\r\n                name=\"bio\"\r\n                tpye=\"text\"\r\n                label=\"Bio\"\r\n                multiline\r\n                rows=\"3\"\r\n                placeholder=\"A short bio about yourself\"\r\n                className={classes.textField}\r\n                value={this.state.bio}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                name=\"location\"\r\n                tpye=\"text\"\r\n                label=\"Location\"\r\n                placeholder=\"Where you live\"\r\n                className={classes.textField}\r\n                value={this.state.location}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n            </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleSubmit} color=\"primary\">\r\n              Save\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nEditDetails.propTypes = {\r\n  editMonkDetails: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  credentials: state.monk.credentials\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { editMonkDetails }\r\n)(withStyles(styles)(EditDetails));","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport NoImg from '../images/no-img.png'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nimport LocationOn from '@material-ui/icons/LocationOn'\r\nimport CalendarToday from '@material-ui/icons/CalendarToday'\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadIt,\r\n  handle: {\r\n    height: 20,\r\n    backgroundColor: theme.palette.primary.main,\r\n    width: 60,\r\n    margin: '0 auto 7px auto'\r\n  },\r\n  fullLine: {\r\n    height: 15,\r\n    backgroundColor: 'rgba(0,0,0,0.6)',\r\n    width: '100%',\r\n    marginBottom: 10\r\n  },\r\n  halfLine: {\r\n    height: 15,\r\n    backgroundColor: 'rgba(0,0,0,0.6)',\r\n    width: '50%',\r\n    marginBottom: 10\r\n  }\r\n})\r\n\r\nconst ProfileSkeleton = (props) => {\r\n  const { classes } = props\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <div className={classes.profile}>\r\n        <div className=\"image-wrapper\">\r\n          <img src={NoImg} alt=\"profile\" className=\"profile-image\" />\r\n        </div>\r\n        <hr />\r\n        <div className=\"profile-details\">\r\n          <div className={classes.handle} />\r\n          <hr />\r\n          <div className={classes.fullLine} />\r\n          <div className={classes.fullLine} />\r\n          <hr />\r\n          <LocationOn color=\"primary\" /> <span>Location</span>\r\n          <hr />\r\n          <CalendarToday color=\"primary\" /> Joined date\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nProfileSkeleton.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(ProfileSkeleton)","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport { Link } from 'react-router-dom'\r\nimport dayjs from 'dayjs'\r\nimport EditDetails from './EditDetails'\r\nimport MyButton from '../util/MyButton'\r\nimport ProfileSkeleton from '../util/ProfileSkeleton'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MuiLink from '@material-ui/core/Link'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nimport {AddAPhoto, HomeWork, Schedule} from '@material-ui/icons'\r\nimport KeyboardReturn from '@material-ui/icons/KeyboardReturn'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { logOutMonk, uploadImage } from '../redux/actions/monkActions'\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.spreadIt\r\n})\r\n\r\nclass Profile extends Component {\r\n\r\n      handleImageChange = (event) => {\r\n        const image = event.target.files[0]\r\n        let formData = new FormData()\r\n        formData.set('image', image, image.name)\r\n        this.props.uploadImage(formData)\r\n      }\r\n\r\n      handleEditPicture = () => {\r\n        const fileInput = document.getElementById('imageInput')\r\n        fileInput.click()\r\n      }\r\n\r\n      handleLogout = () => {\r\n        this.props.logOutMonk()\r\n      }\r\n\r\n    render() {\r\n        const {classes, monk:{credentials:{handle, createdAt, image, bio, location}, loading, authenticated}} = this.props\r\n        \r\n        let profileMarkup = !loading ? (\r\n            authenticated ? (\r\n                <Paper className={classes.paper}>\r\n                    <div className={classes.profile}>\r\n                        <div className=\"image-wrapper\">\r\n                            <img src={image ? \"data:image;base64,\" + btoa(String.fromCharCode.apply(null, new Uint8Array(image.data))):null} alt=\"profile\" className=\"profile-image\" />\r\n                            <input\r\n                                type=\"file\"\r\n                                id=\"imageInput\"\r\n                                hidden=\"hidden\"\r\n                                onChange={this.handleImageChange}\r\n                            />\r\n                            <MyButton\r\n                                tip=\"Edit profile picture\"\r\n                                onClick={this.handleEditPicture}\r\n                                btnClassName=\"button\"\r\n                            >\r\n                                <AddAPhoto color=\"primary\" />\r\n                            </MyButton>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"profile-details\">\r\n                            <MuiLink\r\n                                component={Link}\r\n                                to={`/monks/${handle}`}\r\n                                color=\"primary\"\r\n                                variant=\"h5\"\r\n                            >\r\n                                @{handle}\r\n                            </MuiLink>\r\n                            <hr />\r\n                            {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n                            <hr />\r\n                            {location && (\r\n                            <Fragment>\r\n                                <HomeWork color=\"primary\" /> <span>{location}</span>\r\n                                <hr />\r\n                            </Fragment>\r\n                            )}\r\n                            <Schedule color=\"primary\" />{' '}\r\n                            <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\r\n                        </div>\r\n                        <MyButton tip=\"Logout\" onClick={this.handleLogout}>\r\n                            <KeyboardReturn color=\"primary\" />\r\n                        </MyButton>\r\n                        <EditDetails />\r\n                    </div>\r\n                </Paper>\r\n            ) : (\r\n                    <Paper className={classes.paper}>\r\n                        <Typography variant=\"body2\" align=\"center\">\r\n                            No profile found, please login again\r\n                        </Typography>\r\n                        <div className={classes.buttons}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                component={Link}\r\n                                to=\"/login\"\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                component={Link}\r\n                                to=\"/signup\"\r\n                            >\r\n                                SignUp\r\n                            </Button>\r\n                        </div>\r\n                    </Paper>\r\n                )\r\n        ) : (\r\n                <ProfileSkeleton />\r\n            )\r\n\r\n        return profileMarkup;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    monk: state.monk\r\n})\r\n\r\nconst mapActionsToProps = { logOutMonk, uploadImage}\r\n\r\nProfile.propTypes = {\r\n    logOutMonk: PropTypes.func.isRequired,\r\n    uploadImage: PropTypes.func.isRequired,\r\n    monk: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(withStyles(styles)(Profile))\r\n","import React, { Fragment } from 'react'\r\nimport NoImg from '../images/no-img.png'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Card from '@material-ui/core/Card'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport CardContent from '@material-ui/core/CardContent'\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadIt,\r\n  card: {\r\n    display: 'flex',\r\n    marginBottom: 20\r\n  },\r\n  cardContent: {\r\n    width: '100%',\r\n    flexDirection: 'column',\r\n    padding: 25\r\n  },\r\n  cover: {\r\n    minWidth: 200,\r\n    objectFit: 'cover'\r\n  },\r\n  handle: {\r\n    width: 60,\r\n    height: 18,\r\n    backgroundColor: theme.palette.primary.main,\r\n    marginBottom: 7\r\n  },\r\n  date: {\r\n    height: 14,\r\n    width: 100,\r\n    backgroundColor: 'rgba(0,0,0, 0.3)',\r\n    marginBottom: 10\r\n  },\r\n  fullLine: {\r\n    height: 15,\r\n    width: '90%',\r\n    backgroundColor: 'rgba(0,0,0, 0.6)',\r\n    marginBottom: 10\r\n  },\r\n  halfLine: {\r\n    height: 15,\r\n    width: '50%',\r\n    backgroundColor: 'rgba(0,0,0, 0.6)',\r\n    marginBottom: 10\r\n  }\r\n})\r\n\r\nconst EngraveSkeleton = (props) => {\r\n  const { classes } = props\r\n\r\n  const content = Array.from({ length: 5 }).map((item, index) => (\r\n    <Card className={classes.card} key={index}>\r\n      <CardMedia className={classes.cover} image={NoImg} />\r\n      <CardContent className={classes.cardContent}>\r\n        <div className={classes.handle} />\r\n        <div className={classes.date} />\r\n        <div className={classes.fullLine} />\r\n        <div className={classes.fullLine} />\r\n        <div className={classes.halfLine} />\r\n      </CardContent>\r\n    </Card>\r\n  ))\r\n\r\n  return <Fragment>{content}</Fragment>\r\n}\r\n\r\nEngraveSkeleton.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(EngraveSkeleton)","import Grid from '@material-ui/core/Grid'\r\nimport React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Engrave from '../components/Engrave'\r\nimport Profile from '../components/Profile'\r\nimport EngraveSkeleton from '../util/EngraveSkeleton'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { getEngraves } from '../redux/actions/dataActions'\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        this.props.getEngraves()\r\n    }\r\n\r\n    render() {\r\n        const { engraves, loading } = this.props.data\r\n        let recentEngraves = !loading ? (\r\n            engraves.map(engrave => <Engrave key={engrave._id} engrave={engrave} />)\r\n        ) : (<EngraveSkeleton/>)\r\n        return (\r\n            <Grid container spacing={10}>\r\n                <Grid item sm={8} xs={12}>\r\n                    <div>{recentEngraves}</div>\r\n                </Grid>\r\n                <Grid item sm={4} xs={12}>\r\n                    <Profile />\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    getEngraves: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getEngraves }\r\n)(Home)","import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport PropTypes from 'prop-types'\r\nimport MonkIcon from '../images/void.jpg'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Button from '@material-ui/core/Button'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { loginMonk } from '../redux/actions/monkActions'\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.spreadIt\r\n})\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errors: '',\r\n            errKey: ''\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.UI.errors && nextProps.UI.errKey) {\r\n            this.setState({\r\n                errors: nextProps.UI.errors,\r\n                errKey: nextProps.UI.errKey\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const monkData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        this.props.loginMonk(monkData, this.props.history)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {classes, UI:{loading}, monk:{errors, errKey}} = this.props\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm />\r\n                <Grid item sm>\r\n                    <img src={MonkIcon} alt='monk' className={classes.icon}/>\r\n                    <Typography\r\n                        variant='h2'\r\n                        className={classes.title}\r\n                    >\r\n                        Login\r\n                    </Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField \r\n                            id='email' \r\n                            name='email' \r\n                            type='email' \r\n                            label='Email' \r\n                            className={classes.textField}\r\n                            helperText={errKey === '\"email\"' ? errors : ''}\r\n                            error={errKey === '\"email\"' ? true : false}\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                            fullWidth \r\n                        />\r\n                        <TextField \r\n                            id='password' \r\n                            name='password' \r\n                            type='password' \r\n                            label='Password' \r\n                            className={classes.textField}\r\n                            helperText={errKey === '\"password\"' ? errors : ''}\r\n                            error={errKey === '\"password\"' ? true : false}\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            fullWidth \r\n                        />\r\n                        <Button \r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            disabled={loading}\r\n                        >Login\r\n                        {loading && (\r\n                            <CircularProgress size={30} className={classes.progress}/>\r\n                        )}\r\n                        </Button>\r\n                        <br/>\r\n                        <br/>\r\n                        <small>Don't have an account? <Link to='/signup'>Sign Up</Link></small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm />\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    loginMonk: PropTypes.func.isRequired,\r\n    monk: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    monk: state.monk,\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, {loginMonk})(withStyles(styles)(Login))","import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport PropTypes from 'prop-types'\r\nimport MonkIcon from '../images/void.jpg'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Button from '@material-ui/core/Button'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { signUpMonk } from '../redux/actions/monkActions'\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.spreadIt\r\n})\r\n\r\nclass SignUp extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            handle: '',\r\n            loading: false,\r\n            errors: '',\r\n            errKey: ''\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.UI.errors && nextProps.UI.errKey) {\r\n            this.setState({\r\n                errors: nextProps.UI.errors,\r\n                errKey: nextProps.UI.errKey\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newMonkData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            handle: this.state.handle\r\n        }\r\n        this.props.signUpMonk(newMonkData, this.props.history)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        const {errors, loading, errKey} = this.state\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm />\r\n                <Grid item sm>\r\n                    <img src={MonkIcon} alt='monk' className={classes.icon}/>\r\n                    <Typography\r\n                        variant='h2'\r\n                        className={classes.title}\r\n                    >\r\n                        SignUp\r\n                    </Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField \r\n                            id='handle' \r\n                            name='handle' \r\n                            type='handle' \r\n                            label='Handle' \r\n                            className={classes.textField}\r\n                            helperText={errKey === '\"handle\"' ? errors : ''}\r\n                            error={errKey === '\"handle\"' ? true : false}\r\n                            value={this.state.handle}\r\n                            onChange={this.handleChange}\r\n                            fullWidth \r\n                        />\r\n                        <TextField \r\n                            id='email' \r\n                            name='email' \r\n                            type='email' \r\n                            label='Email' \r\n                            className={classes.textField}\r\n                            helperText={errKey === '\"email\"' ? errors : ''}\r\n                            error={errKey === '\"email\"' ? true : false}\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                            fullWidth \r\n                        />\r\n                        <TextField \r\n                            id='password' \r\n                            name='password' \r\n                            type='password' \r\n                            label='Password' \r\n                            className={classes.textField}\r\n                            helperText={errKey === '\"password\"' ? errors : ''}\r\n                            error={errKey === '\"password\"' ? true : false}\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            fullWidth \r\n                        />\r\n                        <Button \r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            disabled={loading}\r\n                        >Signup\r\n                        {loading && (\r\n                            <CircularProgress size={30} className={classes.progress}/>\r\n                        )}\r\n                        </Button>\r\n                        <br/>\r\n                        <br/>\r\n                        <small>Do you already have an account? <Link to='/login'>Login</Link></small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm />\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nSignUp.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    signUpMonk: PropTypes.func.isRequired,\r\n    monk: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    monk: state.monk,\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, {signUpMonk})(withStyles(styles)(SignUp))","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport dayjs from 'dayjs'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MuiLink from '@material-ui/core/Link'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport LocationOn from '@material-ui/icons/LocationOn'\r\nimport CalendarToday from '@material-ui/icons/CalendarToday'\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadIt\r\n})\r\n\r\nconst StaticProfile = (props) => {\r\n  const {\r\n    classes,\r\n    profile: { handle, createdAt, image, bio, location }\r\n  } = props\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <div className={classes.profile}>\r\n        <div className=\"image-wrapper\">\r\n          <img src={image ? \"data:image;base64,\" + btoa(String.fromCharCode.apply(null, new Uint8Array(image.data))):null} alt=\"profile\" className=\"profile-image\" />\r\n        </div>\r\n        <hr />\r\n        <div className=\"profile-details\">\r\n          <MuiLink\r\n            component={Link}\r\n            to={`/monks/${handle}`}\r\n            color=\"primary\"\r\n            variant=\"h5\"\r\n          >\r\n            @{handle}\r\n          </MuiLink>\r\n          <hr />\r\n          {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n          <hr />\r\n          {location && (\r\n            <Fragment>\r\n              <LocationOn color=\"primary\" /> <span>{location}</span>\r\n              <hr />\r\n            </Fragment>\r\n          )}\r\n          <CalendarToday color=\"primary\" />{' '}\r\n          <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nStaticProfile.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(StaticProfile)","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\nimport Engrave from '../components/Engrave'\r\nimport StaticProfile from '../components/StaticProfile'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport EngraveSkeleton from '../util/EngraveSkeleton'\r\nimport ProfileSkeleton from '../util/ProfileSkeleton'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { getMonkData } from '../redux/actions/dataActions'\r\n\r\nclass Monk extends Component {\r\n  state = {\r\n    profile: null,\r\n    engraveIdParam: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    const handle = this.props.match.params.handle\r\n    const engraveId = this.props.match.params.engraveId\r\n\r\n    if (engraveId) this.setState({ engraveIdParam: engraveId })\r\n\r\n    this.props.getMonkData(handle)\r\n    axios\r\n      .get(`/monk/${handle}`)\r\n      .then((res) => {\r\n        this.setState({\r\n          profile: res.data\r\n        })\r\n      })\r\n      .catch((err) => {return})\r\n  }\r\n  render() {\r\n    const { engraves, loading } = this.props.data\r\n    const { engraveIdParam } = this.state\r\n\r\n    const engravesMarkup = loading ? (\r\n      <EngraveSkeleton />\r\n    ) : engraves === null ? (\r\n      <p>No engraves from this monk</p>\r\n    ) : !engraveIdParam ? (\r\n      engraves.map((engrave) => <Engrave key={engrave._id} engrave={engrave} />)\r\n    ) : (\r\n      engraves.map((engrave) => {\r\n        if (engrave._id !== engraveIdParam)\r\n          return <Engrave key={engrave._id} engrave={engrave} />\r\n        else return <Engrave key={engrave._id} engrave={engrave} openDialog />\r\n      })\r\n    )\r\n\r\n    return (\r\n      <Grid container spacing={12}>\r\n        <Grid item sm={7} xs={8}>\r\n          {engravesMarkup}\r\n        </Grid>\r\n        <Grid style={{paddingLeft: '20px'}}item sm={4} xs={8}>\r\n          {this.state.profile === null ? (\r\n            <ProfileSkeleton />\r\n          ) : (\r\n            <StaticProfile profile={this.state.profile} />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nMonk.propTypes = {\r\n  getMonkData: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getMonkData }\r\n)(Monk)","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AuthRoute = ({ component: Component , authenticated, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => authenticated === true ? <Redirect to='/'/> : <Component {...props}/>}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.monk.authenticated\r\n})\r\n  \r\nAuthRoute.propTypes = {\r\n    monk: PropTypes.object\r\n}\r\n  \r\nexport default connect(mapStateToProps)(AuthRoute)","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.css'\nimport jwtDecode from 'jwt-decode'\nimport themeObj from './util/theme'\nimport Navbar from './components/Navbar'\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles'\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport { SET_AUTHENTICATED } from './redux/types'\nimport { logOutMonk, getMonkData } from './redux/actions/monkActions'\n\nimport Home from './pages/Home'\nimport Login from './pages/Login'\nimport SignUp from './pages/SignUp'\nimport Monk from './pages/Monk'\nimport AuthRoute from './util/AuthRoute'\nimport axios from 'axios'\n\nconst theme = createMuiTheme(themeObj)\n\nconst token = localStorage.AuthToken\nif (token) {\n  const decodedToken = jwtDecode(token)\n  if (decodedToken.iat * 10000 < Date.now()) {\n    store.dispatch(logOutMonk())\n    window.location.href = '/'\n  }\n else {\n  store.dispatch({ type: SET_AUTHENTICATED })\n  axios.defaults.headers.common['AuthToken'] = token\n  store.dispatch(getMonkData())\n}\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Router>\n            <Navbar />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <AuthRoute exact path='/login' component={Login} />\n                <AuthRoute exact path='/signup' component={SignUp} />\n                <Route exact path='/monks/:handle' component={Monk} />\n              </Switch>\n            </div>\n          </Router>\n        </Provider>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default App\n","export default {\r\n    palette: {\r\n      primary: {\r\n        light: '#757ce8',\r\n        main: '#3f50b5',\r\n        dark: '#002884',\r\n        contrastText: '#dcd0ff'\r\n      },\r\n      secondary: {\r\n        light: '#73b8ff',\r\n        main: '#2b89f4',\r\n        dark: '#005dc1',\r\n        contrastText: '#000000'\r\n      },\r\n    },\r\n    spreadIt: {\r\n      typography: {\r\n        useNextVariants: true,\r\n      },\r\n      form: {\r\n        textAlign: 'center'\r\n      },\r\n      icon: {\r\n        height: 100,\r\n        marginBottom: '15px'\r\n      },\r\n      title: {\r\n        margin: '20px auto 20px auto'\r\n      },\r\n      textField: {\r\n        margin: '10px auto 10px auto'\r\n      },\r\n      button: {\r\n        marginTop: 30,\r\n        marginBottom: 30,\r\n        position: 'relative'\r\n      },\r\n      progress: {\r\n        position: 'absolute'\r\n      },\r\n      invisibleSeparator: {\r\n        border: 'none',\r\n        margin: 4\r\n      },\r\n      visibleSeparator: {\r\n        width: '100%',\r\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\r\n        marginBottom: 20\r\n      },\r\n      paper: {\r\n        padding: 20\r\n      },\r\n      profile: {\r\n        '& .image-wrapper': {\r\n          textAlign: 'center',\r\n          position: 'relative',\r\n          '& button': {\r\n            position: 'absolute',\r\n            top: '80%',\r\n            left: '70%'\r\n          }\r\n        },\r\n        '& .profile-image': {\r\n          width: 200,\r\n          height: 200,\r\n          objectFit: 'cover',\r\n          maxWidth: '100%',\r\n          borderRadius: '50%'\r\n        },\r\n        '& .profile-details': {\r\n          textAlign: 'center',\r\n          '& span, svg': {\r\n            verticalAlign: 'middle'\r\n          },\r\n          '& a': {\r\n            color: '#00bcd4'\r\n          }\r\n        },\r\n        '& hr': {\r\n          border: 'none',\r\n          margin: '0 0 10px 0'\r\n        },\r\n        '& svg.button': {\r\n          '&:hover': {\r\n            cursor: 'pointer'\r\n          }\r\n        }\r\n      },\r\n      buttons: {\r\n        textAlign: 'center',\r\n        '& a': {\r\n          margin: '20px 10px'\r\n        }\r\n      }\r\n    }\r\n  }","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n","module.exports = __webpack_public_path__ + \"static/media/no-img.6732bd42.png\";","module.exports = __webpack_public_path__ + \"static/media/void.62b188ef.jpg\";"],"sourceRoot":""}